name: Unit tests

on:
  schedule:
    - cron: "0 5 * * 0"
  ## This is a bit overkill... ideally we only merge into master after a PR is approved
  # push:
  #   branches:
  #     - master
  #   paths:
  #     - "src/**"
  #     - "tests/**"
  #     - ".github/workflows/testing.yml"
  pull_request:
    types:
      - review_requested
  workflow_dispatch:

jobs:
  unittest:
    name: Unit tests
    runs-on:
      - self-hosted
      - gpu

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: false
      - name: Install uv
        id: setup-python
        uses: astral-sh/setup-uv@v4
        # with:
        #   enable-cache: true
      - uses: actions/cache@v4
        id: cache-env
        with:
          path: .venv
          key: ${{ runner.os }}-uv-${{ steps.setup-python.outputs.uv-version }}-env-${{ hashFiles('uv.lock') }}
      - name: Setup venv for testing & Install dependencies
        if: steps.cache-env.outputs.cache-hit != 'true'
        run: |
          uv venv
          uv sync --extra test
      - name: Running pytest
        run: uv run pytest -v --cov=yasfpy --cov-report=xml --cov-report=html --junitxml=junit.xml -o junit_family=legacy
      - name: Coverage in XML
        run: uv run coverage xml -i
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage.xml
            junit.xml
            htmlcov/
          retention-days: 7

  codacy-coverage-reporter:
    runs-on: ubuntu-latest
    name: Codacy coverage reporter
    needs: unittest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: false
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ./coverage.xml

  deepsource-coverage-reporter:
    runs-on: ubuntu-latest
    name: DeepSource coverage reporter
    needs: unittest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: false
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
      - name: Report test coverage to DeepSource
        uses: deepsourcelabs/test-coverage-action@master
        with:
          key: python
          coverage-file: coverage.xml
          dsn: ${{ secrets.DEEPSOURCE_DSN }}

  codecov-coverage-reporter:
    runs-on: ubuntu-latest
    name: CodeCov coverage reporter
    needs: unittest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
